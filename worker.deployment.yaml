apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  namespace: bernstein
  labels:
    app: worker
    component: backend
    part-of: bernstein
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker
      component: backend
  template:
    metadata:
      labels:
        app: worker
        component: backend
    spec:
      restartPolicy: Always
      containers:
      - name: worker
        # TODO: update with the actual worker image from your registry
        image: ghcr.io/your-org/bernstein-worker:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: REDIS_HOST
          value: "redis"
        - name: REDIS_PORT
          value: "6379"
        - name: POSTGRES_HOST
          value: "postgres"
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DB
          value: "votes"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: POSTGRES_PASSWORD
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
      # Spread if replicas > 1 later
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: worker
                  component: backend
