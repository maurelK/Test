# Generated by Django 5.2.4 on 2025-10-04 15:35

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Beneficiary",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Masculin"), ("F", "Féminin")], max_length=1
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("address", models.TextField(blank=True)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("card_number", models.CharField(max_length=50, unique=True)),
                ("national_id", models.CharField(blank=True, max_length=50)),
                (
                    "photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="beneficiaries/"
                    ),
                ),
                (
                    "qr_code",
                    models.ImageField(blank=True, null=True, upload_to="qr_codes/"),
                ),
                (
                    "farm_size",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Superficie en hectares",
                        max_digits=6,
                        null=True,
                    ),
                ),
                ("main_crops", models.CharField(blank=True, max_length=200)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Actif"),
                            ("suspended", "Suspendu"),
                            ("inactive", "Inactif"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "registration_date",
                    models.DateField(default=django.utils.timezone.now),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Bénéficiaire",
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.CreateModel(
            name="Commune",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("code", models.CharField(max_length=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Commune",
                "ordering": ["department__name", "name"],
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("code", models.CharField(max_length=10, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Département",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="DistributionSite",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "site_type",
                    models.CharField(
                        choices=[
                            ("cooperative", "Coopérative"),
                            ("collection_point", "Point de collecte"),
                            ("mobile", "Mobile"),
                            ("other", "Autre"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("contact_person", models.CharField(blank=True, max_length=200)),
                ("contact_phone", models.CharField(blank=True, max_length=20)),
                (
                    "capacity",
                    models.PositiveIntegerField(help_text="Capacité de stockage (kg)"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("opening_date", models.DateField(blank=True, null=True)),
                ("closing_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Site de distribution",
                "ordering": [
                    "village__commune__department__name",
                    "village__commune__name",
                    "name",
                ],
            },
        ),
        migrations.CreateModel(
            name="InputCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "icon",
                    models.ImageField(blank=True, null=True, upload_to="categories/"),
                ),
            ],
            options={
                "verbose_name": "Catégorie d'intrant",
                "verbose_name_plural": "Catégories d'intrants",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Administrateur"),
                            ("supervisor", "Superviseur"),
                            ("agent", "Agent de distribution"),
                            ("logistician", "Logisticien"),
                        ],
                        default="agent",
                        max_length=20,
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=20)),
                (
                    "employee_id",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("is_active_field", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "profile_photo",
                    models.ImageField(blank=True, null=True, upload_to="profiles/"),
                ),
                ("address", models.TextField(blank=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="AuditTrail",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("create", "Création"),
                            ("update", "Modification"),
                            ("delete", "Suppression"),
                            ("login", "Connexion"),
                            ("logout", "Déconnexion"),
                            ("sync", "Synchronisation"),
                        ],
                        max_length=20,
                    ),
                ),
                ("content_type", models.CharField(blank=True, max_length=100)),
                ("object_id", models.CharField(blank=True, max_length=100)),
                ("object_repr", models.CharField(blank=True, max_length=200)),
                ("changes", models.JSONField(blank=True, default=dict)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audit_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Campaign",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("planned", "Planifiée"),
                            ("active", "Active"),
                            ("suspended", "Suspendue"),
                            ("completed", "Terminée"),
                            ("cancelled", "Annulée"),
                        ],
                        default="planned",
                        max_length=20,
                    ),
                ),
                (
                    "budget",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "target_beneficiaries",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "manager",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="managed_campaigns",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "supervisors",
                    models.ManyToManyField(
                        blank=True,
                        related_name="supervised_campaigns",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "target_communes",
                    models.ManyToManyField(blank=True, to="intra.commune"),
                ),
                (
                    "target_departments",
                    models.ManyToManyField(blank=True, to="intra.department"),
                ),
            ],
            options={
                "verbose_name": "Campagne",
                "ordering": ["-start_date", "name"],
            },
        ),
        migrations.CreateModel(
            name="BeneficiaryCampaign",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assigned_agent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "beneficiary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intra.beneficiary",
                    ),
                ),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="intra.campaign"
                    ),
                ),
                (
                    "assigned_site",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="intra.distributionsite",
                    ),
                ),
            ],
            options={
                "unique_together": {("beneficiary", "campaign")},
            },
        ),
        migrations.AddField(
            model_name="beneficiary",
            name="campaigns",
            field=models.ManyToManyField(
                related_name="beneficiaries",
                through="intra.BeneficiaryCampaign",
                to="intra.campaign",
            ),
        ),
        migrations.AddField(
            model_name="commune",
            name="department",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="communes",
                to="intra.department",
            ),
        ),
        migrations.CreateModel(
            name="Distribution",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "distribution_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("reference_number", models.CharField(max_length=50, unique=True)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("is_representative", models.BooleanField(default=False)),
                ("representative_name", models.CharField(blank=True, max_length=200)),
                (
                    "representative_id_photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="representatives/"
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("free", "Gratuit/Subventionné"),
                            ("cash", "Espèces"),
                            ("mobile_money", "Mobile Money"),
                            ("credit", "Crédit"),
                        ],
                        default="free",
                        max_length=20,
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "amount_paid",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("completed", "Terminée"),
                            ("cancelled", "Annulée"),
                            ("synced", "Synchronisée"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("is_synced", models.BooleanField(default=False)),
                ("sync_attempts", models.PositiveIntegerField(default=0)),
                ("last_sync_attempt", models.DateTimeField(blank=True, null=True)),
                (
                    "agent_signature",
                    models.TextField(
                        blank=True, help_text="Signature numérique de l'agent"
                    ),
                ),
                ("beneficiary_confirmation", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="distributions_made",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "beneficiary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="distributions",
                        to="intra.beneficiary",
                    ),
                ),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="distributions",
                        to="intra.campaign",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="distributions",
                        to="intra.distributionsite",
                    ),
                ),
            ],
            options={
                "verbose_name": "Distribution",
                "ordering": ["-distribution_date"],
            },
        ),
        migrations.CreateModel(
            name="DocumentCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "icon",
                    models.ImageField(
                        blank=True, null=True, upload_to="doc_categories/"
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="intra.documentcategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Catégorie de document",
                "verbose_name_plural": "Catégories de documents",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=300)),
                ("description", models.TextField()),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("guide", "Guide technique"),
                            ("manual", "Manuel"),
                            ("video", "Vidéo"),
                            ("report", "Rapport"),
                            ("form", "Formulaire"),
                            ("other", "Autre"),
                        ],
                        max_length=20,
                    ),
                ),
                ("file", models.FileField(upload_to="documents/")),
                ("file_size", models.BigIntegerField(blank=True, null=True)),
                ("mime_type", models.CharField(max_length=100)),
                (
                    "thumbnail",
                    models.ImageField(blank=True, null=True, upload_to="thumbnails/"),
                ),
                (
                    "keywords",
                    models.TextField(
                        blank=True, help_text="Mots-clés séparés par des virgules"
                    ),
                ),
                ("language", models.CharField(default="fr", max_length=10)),
                ("is_public", models.BooleanField(default=True)),
                (
                    "allowed_roles",
                    models.CharField(
                        blank=True,
                        help_text="Rôles autorisés (séparés par des virgules)",
                        max_length=200,
                    ),
                ),
                ("author", models.CharField(blank=True, max_length=200)),
                ("version", models.CharField(default="1.0", max_length=20)),
                ("publication_date", models.DateField(blank=True, null=True)),
                ("download_count", models.PositiveIntegerField(default=0)),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="uploaded_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="intra.documentcategory",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AgriculturalInput",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("brand", models.CharField(blank=True, max_length=100)),
                (
                    "variety",
                    models.CharField(
                        blank=True,
                        help_text="Variété (pour les semences)",
                        max_length=100,
                    ),
                ),
                (
                    "composition",
                    models.TextField(blank=True, help_text="Composition chimique"),
                ),
                (
                    "unit",
                    models.CharField(
                        choices=[
                            ("kg", "Kilogramme"),
                            ("l", "Litre"),
                            ("bag", "Sac"),
                            ("piece", "Pièce"),
                            ("bottle", "Bouteille"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "package_size",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="Taille du conditionnement",
                        max_digits=10,
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "subsidized_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("description", models.TextField(blank=True)),
                ("usage_instructions", models.TextField(blank=True)),
                ("safety_instructions", models.TextField(blank=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="inputs/"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inputs",
                        to="intra.inputcategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Intrant agricole",
                "ordering": ["category__name", "name"],
                "unique_together": {("name", "brand", "package_size", "unit")},
            },
        ),
        migrations.CreateModel(
            name="Inventory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "initial_quantity",
                    models.DecimalField(decimal_places=3, default=0, max_digits=10),
                ),
                (
                    "current_quantity",
                    models.DecimalField(decimal_places=3, default=0, max_digits=10),
                ),
                (
                    "reserved_quantity",
                    models.DecimalField(decimal_places=3, default=0, max_digits=10),
                ),
                (
                    "distributed_quantity",
                    models.DecimalField(decimal_places=3, default=0, max_digits=10),
                ),
                ("stock_date", models.DateField(default=django.utils.timezone.now)),
                ("expiry_date", models.DateField(blank=True, null=True)),
                ("batch_number", models.CharField(blank=True, max_length=100)),
                ("supplier", models.CharField(blank=True, max_length=200)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "agricultural_input",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intra.agriculturalinput",
                    ),
                ),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="intra.campaign"
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inventory",
                        to="intra.distributionsite",
                    ),
                ),
            ],
            options={
                "verbose_name": "Stock",
                "ordering": ["site__name", "agricultural_input__name"],
                "unique_together": {
                    ("site", "agricultural_input", "campaign", "batch_number")
                },
            },
        ),
        migrations.CreateModel(
            name="PaymentTransaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("transaction_id", models.CharField(max_length=100, unique=True)),
                (
                    "external_reference",
                    models.CharField(
                        blank=True,
                        help_text="Référence Mobile Money ou autre",
                        max_length=100,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "fee",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("net_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("free", "Gratuit/Subventionné"),
                            ("cash", "Espèces"),
                            ("mobile_money", "Mobile Money"),
                            ("credit", "Crédit"),
                        ],
                        max_length=20,
                    ),
                ),
                ("mobile_operator", models.CharField(blank=True, max_length=50)),
                ("payer_phone", models.CharField(blank=True, max_length=20)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("completed", "Terminée"),
                            ("failed", "Échouée"),
                            ("cancelled", "Annulée"),
                            ("refunded", "Remboursée"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("receipt_number", models.CharField(max_length=50, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "distribution",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment",
                        to="intra.distribution",
                    ),
                ),
            ],
            options={
                "verbose_name": "Transaction de paiement",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SiteAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False, help_text="Agent principal du site"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intra.distributionsite",
                    ),
                ),
            ],
            options={
                "unique_together": {("agent", "site", "start_date")},
            },
        ),
        migrations.AddField(
            model_name="distributionsite",
            name="assigned_agents",
            field=models.ManyToManyField(
                related_name="assigned_sites",
                through="intra.SiteAssignment",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="SyncLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "sync_type",
                    models.CharField(
                        choices=[
                            ("manual", "Manuel"),
                            ("automatic", "Automatique"),
                            ("forced", "Forcé"),
                        ],
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "Succès"),
                            ("partial", "Partiel"),
                            ("failed", "Échec"),
                        ],
                        max_length=20,
                    ),
                ),
                ("records_sent", models.PositiveIntegerField(default=0)),
                ("records_received", models.PositiveIntegerField(default=0)),
                ("errors_count", models.PositiveIntegerField(default=0)),
                ("error_details", models.TextField(blank=True)),
                ("sync_summary", models.JSONField(blank=True, default=dict)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sync_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="Village",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "commune",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="villages",
                        to="intra.commune",
                    ),
                ),
            ],
            options={
                "ordering": ["commune__department__name", "commune__name", "name"],
                "unique_together": {("name", "commune")},
            },
        ),
        migrations.CreateModel(
            name="MessageCampaign",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("info", "Information"),
                            ("alert", "Alerte"),
                            ("reminder", "Rappel"),
                            ("weather", "Météo"),
                            ("training", "Formation"),
                        ],
                        max_length=20,
                    ),
                ),
                ("content", models.TextField()),
                ("content_local_language", models.TextField(blank=True)),
                (
                    "target_gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Masculin"), ("F", "Féminin")],
                        max_length=1,
                    ),
                ),
                ("target_age_min", models.PositiveIntegerField(blank=True, null=True)),
                ("target_age_max", models.PositiveIntegerField(blank=True, null=True)),
                ("scheduled_at", models.DateTimeField(blank=True, null=True)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Brouillon"),
                            ("scheduled", "Programmé"),
                            ("sending", "En cours d'envoi"),
                            ("sent", "Envoyé"),
                            ("cancelled", "Annulé"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("total_recipients", models.PositiveIntegerField(default=0)),
                ("successful_deliveries", models.PositiveIntegerField(default=0)),
                ("failed_deliveries", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="message_campaigns",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "target_communes",
                    models.ManyToManyField(blank=True, to="intra.commune"),
                ),
                (
                    "target_departments",
                    models.ManyToManyField(blank=True, to="intra.department"),
                ),
                (
                    "target_villages",
                    models.ManyToManyField(blank=True, to="intra.village"),
                ),
            ],
            options={
                "verbose_name": "Campagne de message",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="distributionsite",
            name="village",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="distribution_sites",
                to="intra.village",
            ),
        ),
        migrations.AddField(
            model_name="campaign",
            name="target_villages",
            field=models.ManyToManyField(blank=True, to="intra.village"),
        ),
        migrations.AddField(
            model_name="beneficiary",
            name="village",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="beneficiaries",
                to="intra.village",
            ),
        ),
        migrations.CreateModel(
            name="BeneficiaryAllocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "allocated_quantity",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "distributed_quantity",
                    models.DecimalField(
                        decimal_places=3,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "agricultural_input",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intra.agriculturalinput",
                    ),
                ),
                (
                    "beneficiary_campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="allocations",
                        to="intra.beneficiarycampaign",
                    ),
                ),
            ],
            options={
                "unique_together": {("beneficiary_campaign", "agricultural_input")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="commune",
            unique_together={("name", "department")},
        ),
        migrations.CreateModel(
            name="DistributionItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "allocated_quantity",
                    models.DecimalField(
                        decimal_places=3, help_text="Quantité à remettre", max_digits=10
                    ),
                ),
                (
                    "distributed_quantity",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="Quantité effectivement remise",
                        max_digits=10,
                    ),
                ),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("total_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "subsidy_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "agricultural_input",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intra.agriculturalinput",
                    ),
                ),
                (
                    "distribution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="intra.distribution",
                    ),
                ),
                (
                    "inventory_source",
                    models.ForeignKey(
                        help_text="Source du stock utilisé",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="intra.inventory",
                    ),
                ),
            ],
            options={
                "unique_together": {("distribution", "agricultural_input")},
            },
        ),
        migrations.CreateModel(
            name="MessageDelivery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("phone_number", models.CharField(max_length=20)),
                (
                    "delivery_method",
                    models.CharField(
                        choices=[("sms", "SMS"), ("push", "Push")], max_length=10
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("sent", "Envoyé"),
                            ("delivered", "Livré"),
                            ("failed", "Échec"),
                            ("read", "Lu"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("external_id", models.CharField(blank=True, max_length=100)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "beneficiary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages_received",
                        to="intra.beneficiary",
                    ),
                ),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deliveries",
                        to="intra.messagecampaign",
                    ),
                ),
            ],
            options={
                "unique_together": {("campaign", "beneficiary")},
            },
        ),
    ]
